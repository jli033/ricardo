<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.springmvc.dao.UserDAO">
         
         <sql id="allmenbers">
         id,
         device_type,
         device_num,
         create_time,
         last_time,
         state,
         nickname
         </sql>
         
         <sql id="menberEcpId">
         device_type,
         device_num,
         create_time,
         last_time,
         state,
         nickname
         </sql>
         
         <insert id="insertUser" parameterType="User" keyProperty="id">
             insert into days_user(  
             device_type,
         device_num,
         create_time,
         last_time,
         state,
         nickname) 
         values 
         (        
         #{device_type},
         #{device_num},
         #{create_time},
         #{last_time},
         #{state},
         #{nickname})
         </insert>
         
<!--          <delete id="deleteStudent" parameterType="int">
             delete from users_name where id = #{id}
         </delete>
         
         <update id="updateStudent" parameterType="Student">
             update users_name set name = #{name} where id = #{id}
         </update>
         
         <select id="queryStudentById" parameterType="int" resultType="Student">
           select * from users_name where id=#{id}
         </select> 
         
         <select id="queryAllStudents" resultType="Student">
             select * from users_name
         </select> -->
         
         <!-- ////////////////////////////////// -->
         <sql id="user">
         	userId,
         	userName,
         	loginId,
         	password
         </sql>
         <select id="selectUserFromModel" parameterType="User" resultType="User">
         	select userId,
	         	userName,
	         	loginId,
	         	password,
	         	(
					(select sum(RechargeMoney) from t_recharge where t_recharge.UserId = m_user.UserId)
			        -
					(select sum(cost) from t_cost where t_cost.UserId = m_user.UserId) 
			     ) as balance
         	from m_user 
         	where 1=1
         	<if test="userId!=null and userId!=''">
         		and userId=#{userId}
         	</if>
         	<if test="loginId!=null and loginId!=''">
         		and loginId=#{loginId}
         	</if>
         	<if test="password!=null and password!=''">
         		and password=#{password}
         	</if>
         </select>
</mapper>
